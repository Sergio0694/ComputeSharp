# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# All files
[*]

#### Core EditorConfig Options ####

# Encoding
charset = utf-8

# Indentation and spacing
tab_width = 4
indent_size = 4
indent_style = space

# New line preferences
end_of_line = lf
insert_final_newline = false
trim_trailing_whitespace = true

#### Build files ####

# Solution files
[*.{sln,slnx}]
tab_width = 4
indent_size = 4
indent_style = tab

# Configuration files
[*.{json,xml,yml,config,runsettings}]
indent_size = 2

# MSBuild files
[*.{slnf,props,targets,projitems,csproj,shproj}]
indent_size = 2

#### Source files ####

# Markdown files
[*.md]
indent_size = 2
insert_final_newline = true

# XAML files
[*.xaml]
indent_size = 4

# C# files
[*.cs]

#### .NET Coding Conventions ####

# this. and Me. preferences
dotnet_style_qualification_for_event = false:warning
dotnet_style_qualification_for_field = true:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_property = false:warning

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning

# Modifier preferences (set to silent until https://github.com/dotnet/roslyn/issues/52904 is resolved)
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# Code block preferences
dotnet_style_allow_multiple_blank_lines_experimental = false:warning
dotnet_style_allow_statement_immediately_after_block_experimental = false:warning

# Expression-level preferences
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:warning
csharp_style_throw_expression = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
csharp_style_implicit_object_creation_when_type_is_apparent = true:warning

# Field preferences
dotnet_style_readonly_field = true:warning

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = false:warning
csharp_style_var_for_built_in_types = false:warning
csharp_style_var_when_type_is_apparent = false:warning

# Expression-bodied members
csharp_style_expression_bodied_accessors = when_on_single_line:warning
csharp_style_expression_bodied_constructors = false:warning
csharp_style_expression_bodied_indexers = when_on_single_line:warning
csharp_style_expression_bodied_lambdas = when_on_single_line:warning
csharp_style_expression_bodied_methods = false:warning
csharp_style_expression_bodied_operators = when_on_single_line:warning
csharp_style_expression_bodied_properties = when_on_single_line:warning

# Pattern matching preferences
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,file,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Code-block preferences
csharp_prefer_braces = true:suggestion
csharp_using_directive_placement = outside_namespace:warning
csharp_style_namespace_declarations = file_scoped:warning
csharp_style_unused_value_assignment_preference = discard_variable:warning
csharp_style_unused_value_expression_statement_preference = discard_variable:warning
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false:warning

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_prefer_static_local_function = true:warning
csharp_style_pattern_local_over_anonymous_function = true:warning

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = no_change
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

# Naming Symbols

# constant_fields - Define constant fields
dotnet_naming_symbols.constant_fields.applicable_accessibilities                  = *
dotnet_naming_symbols.constant_fields.applicable_kinds                            = field
dotnet_naming_symbols.constant_fields.required_modifiers                          = const
# static_readonly_fields - Define all static readonly fields
dotnet_naming_symbols.static_readonly_fields.applicable_accessibilities           = *
dotnet_naming_symbols.static_readonly_fields.applicable_kinds                     = field
dotnet_naming_symbols.static_readonly_fields.required_modifiers                   = static, readonly
# non_private_fields - Define all fields that are not private
dotnet_naming_symbols.non_private_fields.applicable_accessibilities               = public, internal, protected, protected_internal, private_protected
dotnet_naming_symbols.non_private_fields.applicable_kinds                         = field
# private_fields - Define all private fields
dotnet_naming_symbols.private_fields.applicable_accessibilities                   = private
dotnet_naming_symbols.private_fields.applicable_kinds                             = field
# public_symbols - Define any public symbol
dotnet_naming_symbols.public_symbols.applicable_accessibilities                   = *
dotnet_naming_symbols.public_symbols.applicable_kinds                             = method, property, event, delegate, class, struct, enum, delegate
# parameters - Defines any parameter
dotnet_naming_symbols.parameters.applicable_accessibilities                       = *
dotnet_naming_symbols.parameters.applicable_kinds                                 = parameter
# interface_types - Defines interfaces
dotnet_naming_symbols.interface_types.applicable_accessibilities                  = *
dotnet_naming_symbols.interface_types.applicable_kinds                            = interface

# Naming Styles

# camel_case - Define the camelCase style
dotnet_naming_style.camel_case.capitalization                                     = camel_case
# pascal_case - Define the PascalCase style
dotnet_naming_style.pascal_case.capitalization                                    = pascal_case
# prefix_interface_interface_with_i - Interfaces must be PascalCase and the first character of an interface must be an 'I'
dotnet_naming_style.prefix_interface_interface_with_i.capitalization              = pascal_case
dotnet_naming_style.prefix_interface_interface_with_i.required_prefix             = I

# Naming Rules

# Async methods should have the "Async" suffix (disabled because it can't currently exclude async void methods)
dotnet_naming_rule.async_methods_end_in_async.severity                            = none
dotnet_naming_rule.async_methods_end_in_async.symbols                             = any_async_methods
dotnet_naming_rule.async_methods_end_in_async.style                               = end_in_async

dotnet_naming_symbols.any_async_methods.applicable_kinds                          = method
dotnet_naming_symbols.any_async_methods.applicable_accessibilities                = *
dotnet_naming_symbols.any_async_methods.required_modifiers                        = async

dotnet_naming_style.end_in_async.required_suffix                                  = Async
dotnet_naming_style.end_in_async.capitalization                                   = pascal_case

# Private fields must be camelCase
dotnet_naming_rule.private_fields_must_be_pascal_case.severity                    = warning
dotnet_naming_rule.private_fields_must_be_pascal_case.symbols                     = private_fields
dotnet_naming_rule.private_fields_must_be_pascal_case.style                       = camel_case
# Constant fields must be PascalCase
dotnet_naming_rule.constant_fields_must_be_pascal_case.severity                   = warning
dotnet_naming_rule.constant_fields_must_be_pascal_case.symbols                    = constant_fields
dotnet_naming_rule.constant_fields_must_be_pascal_case.style                      = pascal_case
# Static readonly fields must be PascalCase
dotnet_naming_rule.static_readonly_fields_must_be_pascal_case.severity            = warning
dotnet_naming_rule.static_readonly_fields_must_be_pascal_case.symbols             = static_readonly_fields
dotnet_naming_rule.static_readonly_fields_must_be_pascal_case.style               = pascal_case
# Non private fields must be PascalCase
dotnet_naming_rule.non_private_fields_must_be_pascal_case.severity                = warning
dotnet_naming_rule.non_private_fields_must_be_pascal_case.symbols                 = non_private_fields
dotnet_naming_rule.non_private_fields_must_be_pascal_case.style                   = pascal_case
# Public symbols must be capitalized
dotnet_naming_rule.public_symbols_must_be_capitalized.severity                    = warning
dotnet_naming_rule.public_symbols_must_be_capitalized.symbols                     = public_symbols
dotnet_naming_rule.public_symbols_must_be_capitalized.style                       = pascal_case
# Parameters must be camelCase (ignored because some use PascalCase to match Win32 parameter names)
dotnet_naming_rule.parameters_must_be_camel_case.severity                         = none
dotnet_naming_rule.parameters_must_be_camel_case.symbols                          = parameters
dotnet_naming_rule.parameters_must_be_camel_case.style                            = camel_case
# Interfaces must be PascalCase and start with an 'I'
dotnet_naming_rule.interface_types_must_be_prefixed_with_i.severity               = warning
dotnet_naming_rule.interface_types_must_be_prefixed_with_i.symbols                = interface_types
dotnet_naming_rule.interface_types_must_be_prefixed_with_i.style                  = prefix_interface_interface_with_i

# .NET Code Analysis

dotnet_diagnostic.CA1001.severity = warning
dotnet_diagnostic.CA1009.severity = warning
dotnet_diagnostic.CA1016.severity = warning
dotnet_diagnostic.CA1033.severity = warning
dotnet_diagnostic.CA1049.severity = warning
dotnet_diagnostic.CA1060.severity = warning
dotnet_diagnostic.CA1061.severity = warning
dotnet_diagnostic.CA1063.severity = warning
dotnet_diagnostic.CA1065.severity = warning
dotnet_diagnostic.CA1301.severity = warning
dotnet_diagnostic.CA1400.severity = warning
dotnet_diagnostic.CA1401.severity = warning
dotnet_diagnostic.CA1403.severity = warning
dotnet_diagnostic.CA1404.severity = warning
dotnet_diagnostic.CA1405.severity = warning
dotnet_diagnostic.CA1410.severity = warning
dotnet_diagnostic.CA1415.severity = warning
dotnet_diagnostic.CA1821.severity = warning
dotnet_diagnostic.CA1900.severity = warning
dotnet_diagnostic.CA1901.severity = warning
dotnet_diagnostic.CA2002.severity = warning
dotnet_diagnostic.CA2100.severity = warning
dotnet_diagnostic.CA2101.severity = warning
dotnet_diagnostic.CA2108.severity = warning
dotnet_diagnostic.CA2111.severity = warning
dotnet_diagnostic.CA2112.severity = warning
dotnet_diagnostic.CA2114.severity = warning
dotnet_diagnostic.CA2116.severity = warning
dotnet_diagnostic.CA2117.severity = warning
dotnet_diagnostic.CA2122.severity = warning
dotnet_diagnostic.CA2123.severity = warning
dotnet_diagnostic.CA2124.severity = warning
dotnet_diagnostic.CA2126.severity = warning
dotnet_diagnostic.CA2131.severity = warning
dotnet_diagnostic.CA2132.severity = warning
dotnet_diagnostic.CA2133.severity = warning
dotnet_diagnostic.CA2134.severity = warning
dotnet_diagnostic.CA2137.severity = warning
dotnet_diagnostic.CA2138.severity = warning
dotnet_diagnostic.CA2140.severity = warning
dotnet_diagnostic.CA2141.severity = warning
dotnet_diagnostic.CA2146.severity = warning
dotnet_diagnostic.CA2147.severity = warning
dotnet_diagnostic.CA2149.severity = warning
dotnet_diagnostic.CA2200.severity = warning
dotnet_diagnostic.CA2202.severity = warning
dotnet_diagnostic.CA2207.severity = warning
dotnet_diagnostic.CA2212.severity = warning
dotnet_diagnostic.CA2213.severity = warning
dotnet_diagnostic.CA2214.severity = warning
dotnet_diagnostic.CA2216.severity = warning
dotnet_diagnostic.CA2220.severity = warning
dotnet_diagnostic.CA2229.severity = warning
dotnet_diagnostic.CA2231.severity = warning
dotnet_diagnostic.CA2232.severity = warning
dotnet_diagnostic.CA2235.severity = warning
dotnet_diagnostic.CA2236.severity = warning
dotnet_diagnostic.CA2237.severity = warning
dotnet_diagnostic.CA2238.severity = warning
dotnet_diagnostic.CA2240.severity = warning
dotnet_diagnostic.CA2241.severity = warning
dotnet_diagnostic.CA2242.severity = warning

## CodeStyle Code Analysis

dotnet_diagnostic.IDE0010.severity = none
dotnet_diagnostic.IDE0130.severity = none
dotnet_diagnostic.IDE0060.severity = none
dotnet_diagnostic.IDE1006.severity = warning
dotnet_diagnostic.IDE0023.severity = none
dotnet_diagnostic.IDE0024.severity = none
dotnet_diagnostic.IDE0060.severity = none
dotnet_diagnostic.IDE0057.severity = none
dotnet_diagnostic.IDE0046.severity = none
dotnet_diagnostic.IDE0072.severity = none
dotnet_diagnostic.IDE0064.severity = none
dotnet_diagnostic.IDE0160.severity = none
dotnet_diagnostic.IDE0040.severity = none
dotnet_diagnostic.IDE0045.severity = none
dotnet_diagnostic.IDE0032.severity = none
dotnet_diagnostic.IDE0056.severity = none
dotnet_diagnostic.IDE0032.severity = none
dotnet_diagnostic.IDE0042.severity = none
dotnet_diagnostic.IDE0180.severity = none
dotnet_diagnostic.IDE0061.severity = none
dotnet_diagnostic.IDE0078.severity = none
dotnet_diagnostic.IDE0066.severity = none